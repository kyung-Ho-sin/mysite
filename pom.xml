<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>	<!-- 모델 버전 -->
	<groupId>legecy.member</groupId>	<!-- 모델 버전 -->
	<artifactId>join</artifactId>
	<name>membership_pj</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>						<!-- properties 선택하당 이지만 가독성을 위해 이렇게 지정하는게 좋다. --> 
		<java-version>13.0</java-version>
		<!-- 신세계 !!!
		위와 같이 java-version을 지정해두면 dependency에서 <version>${java-version} 이렇게 사용핧수 있다.
		ㄹㅇ 신세계이다.   -->
		<org.springframework-version>3.1.1.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>
	<!-- 오라클 JDBC 드라이버를 가져오기 위해 리포지토리를 추가합니다. -->
	<repositories>
  		<repository>
   		<id>oracle</id>
   		<url>http://maven.jahia.org/maven2</url>
  		</repository>
	</repositories>

	<dependencies>
		<!-- Spring -->
		<dependency>	<!-- dependency 필수사항 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			
			<!-- 아래와 같이 ${org.springframework-version}을 할수있는 이유가 위에 properties안에서 스프링 프레임워크 버전을 정의해놨기 떄문이다. -->
			<version>${org.springframework-version}</version>
			<exclusions>	<!-- 의존 라이브러리를 제외시키는 용도로 사용된다. 즉 spring-context-version 에서의 commons-logging을 제외하고 가져온다는 것이다. -->
							<!-- maven은 의존성때문에 하나의 파일을 가져올때 필요한 다른 파일도 같이 가져온다. 그러한 것을 방지하기 위해 exclusions가 있는것이다. -->
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>	
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- Maria DB -->
		
		<dependency>								<!-- 대략 이렇게 생각하자. -->
		     <groupId>org.mariadb.jdbc</groupId>	<!-- groupid는 다른 프로젝트에서 여기있는 정보를 가져올때 사용할수 있는 경로의 첫번째 를 나타낸다  -->
		     <artifactId>mariadb-java-client</artifactId>	<!-- 경로 아래에 있는 라이브러리 파일 이다. -->
		     <version>2.0.3</version>	<!-- 해당 라이브러리의 버전 -->
		</dependency>
		
		 <!-- 오라클 JDBC 드라이버 -->
		 <dependency>
    		<groupId>com.oracle</groupId>
   			<artifactId>ojdbc6</artifactId>
    		<version>12.1.0.2</version>
		</dependency>

		 
		<!-- DBCP 데이터베이스 풀 커넥션 -->
		<dependency>
		     <groupId>commons-dbcp</groupId>
		     <artifactId>commons-dbcp</artifactId>
		     <version>1.4</version>
		</dependency>
		
		<!-- Spring JDBC -->
		<dependency>
		     <groupId>org.springframework</groupId>
		     <artifactId>spring-jdbc</artifactId>
		     <version>4.3.9.RELEASE</version>
		</dependency>
		
		<!-- Mybatis -->
		<dependency>
		     <groupId>org.mybatis</groupId>
		     <artifactId>mybatis</artifactId>
		     <version>3.4.4</version>
		</dependency>
		
		<dependency>
		     <groupId>org.mybatis</groupId>
		     <artifactId>mybatis-spring</artifactId>
		     <version>1.3.1</version>
		</dependency>

		<dependency>
		     <groupId>org.apache.maven.plugins</groupId>
		     <artifactId>maven-resources-plugin</artifactId>
		     <version>2.4.3</version>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>2.0.4</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		    <version>2.0.4</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.9.7</version>
		</dependency>
		
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-mapper-asl</artifactId>
		    <version>1.9.13</version>
		</dependency>
		
		<dependency>
		    <groupId>com.googlecode.json-simple</groupId>
		    <artifactId>json-simple</artifactId>
		    <version>1.1</version>
		</dependency>
		
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>1.4.7</version>
		</dependency>

		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context-support</artifactId>
		    <version>4.1.7.RELEASE</version>
		</dependency>
		
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>        
	</dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>13</source>
                    <target>13</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
